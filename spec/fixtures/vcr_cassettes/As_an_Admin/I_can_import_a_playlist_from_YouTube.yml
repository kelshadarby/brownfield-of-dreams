---
http_interactions:
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=<YOUTUBE_API_KEY&maxResults=50&pageToken=&part=snippet,contentDetails&playlistId=PLDfKAXSi6kUafKlwAurWST8zb4-Zy1JcU
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Expires:
      - Tue, 12 May 2020 02:58:47 GMT
      Date:
      - Tue, 12 May 2020 02:58:47 GMT
      Cache-Control:
      - private, max-age=0, must-revalidate, no-transform
      Etag:
      - '"Dn5xIderbhAnUk5TAW0qkFFir0M/lZvdI2RmAJZagIKzCYxlLEhLo1k"'
      Vary:
      - Origin
      - X-Origin
      Content-Type:
      - application/json; charset=UTF-8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - SAMEORIGIN
      Content-Security-Policy:
      - frame-ancestors 'self'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - GSE
      Alt-Svc:
      - h3-27=":443"; ma=2592000,h3-25=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 12 May 2020 02:58:47 GMT
- request:
    method: get
    uri: https://www.googleapis.com/youtube/v3/playlistItems?key=<YOUTUBE_API_KEY&maxResults=50&pageToken=CDIQAA&part=snippet,contentDetails&playlistId=PLDfKAXSi6kUafKlwAurWST8zb4-Zy1JcU
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json; charset=UTF-8
      Vary:
      - Origin
      - Referer
      - X-Origin
      Date:
      - Tue, 12 May 2020 02:58:47 GMT
      Server:
      - scaffolding on HTTPServer2
      Cache-Control:
      - private
      X-Xss-Protection:
      - '0'
      X-Frame-Options:
      - SAMEORIGIN
      X-Content-Type-Options:
      - nosniff
      Alt-Svc:
      - h3-27=":443"; ma=2592000,h3-25=":443"; ma=2592000,h3-Q050=":443"; ma=2592000,h3-Q049=":443";
        ma=2592000,h3-Q048=":443"; ma=2592000,h3-Q046=":443"; ma=2592000,h3-Q043=":443";
        ma=2592000,quic=":443"; ma=2592000; v="46,43"
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: null
  recorded_at: Tue, 12 May 2020 02:58:47 GMT
recorded_with: VCR 5.1.0
